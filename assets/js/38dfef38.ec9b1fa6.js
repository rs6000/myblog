"use strict";(self.webpackChunkmyblog=self.webpackChunkmyblog||[]).push([[3224],{847:(r,e,n)=>{n.d(e,{A:()=>t});const t=n.p+"assets/images/StcokCalculator_2-f27fe06723309dc910705e9b1733c774.png"},3012:(r,e,n)=>{n.d(e,{A:()=>t});const t=n.p+"assets/files/StcokCalculator-0ee49ac69c5600e47a07c4b0a2cc1a5b.png"},4331:(r,e,n)=>{n.d(e,{A:()=>t});const t=n.p+"assets/images/1130_1_main-b3e5cf7f7738871670fd840d0377d439.png"},7557:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>a});var t=n(9771),i=n(4848),o=n(8453);const l={slug:"Python-Tkinter-GUI-example-stock-profit-calculator",title:"Python Tkinter GUI\u7a0b\u5f0f\u5be6\u4f8b \u80a1\u50f9\u640d\u76ca\u8a08\u7b97\u6a5f",authors:["smilehsu"],tags:["facebook","hello","docusaurus"],date:"2024-09-28T10:00"},c=void 0,s={authorsImageUrls:[void 0]},a=[{value:"\u524d\u8a00:",id:"\u524d\u8a00",level:3}];function d(r){const e={a:"a",br:"br",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...r.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u767c\u5e03\u65e5\u671f: 2020\u5e7412\u67081\u65e5"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\u524d\u8a00",children:"\u524d\u8a00:"}),"\n",(0,i.jsx)(e.p,{children:"\u4e0a\u4e00\u7bc7\u5b8c\u6210\u6211\u7684\u7b2c\u4e00\u652fPython GUI\u4ecb\u9762\u7684\u7a0b\u5f0f(ToDoList )\u4e4b\u5f8c \u63a5\u4e0b\u5c31\u4f86\u505a\u4e00\u96bb\u771f\u6b63\u80fd\u7528\u7684GUI \u7a0b\u5f0f\uff0c\u4e0a\u4e00\u96bb\u5c31\u7576\u662f\u7df4\u7fd2\u7528\u7684"}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u96bb\u7a0b\u5f0f\u7528\u9014\u662f\u8a08\u7b97\u80a1\u50f9\u640d\u76ca\u7684\u8a08\u7b97 \u8f38\u5165\u67d0\u80a1\u7968\u5728XX\u5143\u8cb7\u5165\uff0c\u5728XX\u5143\u8ce3\u51fa\u7684\u640d\u76ca\u8a08\u7b97 \u9019\u500b\u529f\u80fd\u7528Execel \u5927\u6982\u5e7e\u5206\u9418\u5c31\u5b8c\u6210\u4e86\u2026 \u8981\u5728Pyhton + Tkinter \u5e95\u4e0b\u5be6\u4f5c\uff0c\u82b1\u4e86\u4e0d\u5c11\u6642\u9593"}),"\n",(0,i.jsxs)(e.p,{children:["\u4ee5\u4e0b\u662f\u7a0b\u5f0f\u7684\u5916\u89c0:",(0,i.jsx)(e.br,{}),"\n",(0,i.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(3012).A+"",children:"demo"})]}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0b\u76f4\u63a5\u4e0a\u7a0b\u5f0f\u78bc:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import tkinter as tk\r\nfrom tkinter import ttk\r\nfrom tkinter import messagebox\r\nimport csv\r\n\r\nroot = tk.Tk()\r\nroot.title(\"\u80a1\u50f9\u5831\u916c\u8a08\u7b97\u6a5f\")\r\nroot.geometry(\"520x340\")\r\n\r\ndef savefile():\r\n    with open(\"mystock_price.csv\", \"w\", newline='') as myfile:\r\n        csvwriter = csv.writer(myfile, delimiter=',')\r\n\r\n        for row_id in tree.get_children():\r\n            row = tree.item(row_id)['values']\r\n            #print('save row:', row)\r\n            csvwriter.writerow(row)\r\n\r\ndef loadfile():\r\n    clean_treeview()\r\n    with open(\"mystock_price.csv\") as myfile:\r\n        csvread = csv.reader(myfile, delimiter=',')\r\n\r\n        for row in csvread:\r\n            #print('load row:', row)\r\n            tree.insert(\"\", 'end', values=row)\r\n\r\nn = 1\r\n\r\ndef summy():\r\n    global n\r\n    1. \u80a1\u50f9\u640d\u76ca\u8a08\u7b97\u516c\u5f0f\r\n    1. (\u8ce3\u50f9x\u55ae\u4f4d)-(((\u8ce3\u50f9x\u55ae\u4f4d)*0.0025)+((\u8ce3\u50f9x\u55ae\u4f4d)*0.0025)*0.12+((\u8ce3\u50f9x\u55ae\u4f4d)*0.006)+((\u8ce3\u50f9x\u55ae\u4f4d)*0.00005)+((\u8ce3\u50f9x\u55ae\u4f4d)*0.0001)))-((\u8cb7\u50f9x\u55ae\u4f4d)+((\u8cb7\u50f9x\u55ae\u4f4d)*0.0025)+((\u8cb7\u50f9x\u55ae\u4f4d)*0.0025)*0.12+((\u8cb7\u50f9x\u55ae\u4f4d)*0.00005)+((\u8cb7\u50f9x\u55ae\u4f4d)*0.0001)\r\n    1. (currentprice*qty)-(((currentprice*qty)*0.0025)+((currentprice*qty)*0.0025)*0.12+((currentprice*qty)*0.006)+((currentprice*qty)*0.00005)+((currentprice*qty)*0.0001))-((bidprice*qty)+((bidprice*qty)*0.0025)+((bidprice*qty)*0.0025)*0.12+((bidprice*qty)*0.00005)+((bidprice*qty)*0.0001))\r\n\r\n    symbol = txt_input_symbol.get().upper()\r\n    bidprice = txt_input_bidprice.get()\r\n    qty = txt_input_qty.get()\r\n    currentprice = txt_input_currentprice.get()\r\n\r\n    if symbol == '' or bidprice == '' or qty == '' or currentprice == '':\r\n        messagebox.showwarning(\"\u932f\u8aa4\u8a0a\u606f\", \"\u8acb\u8f38\u5165\u8cc7\u6599!!!\")\r\n\r\n    else:\r\n        try:\r\n            bidprice = float(bidprice)\r\n            qty = float(qty)\r\n            currentprice = float(currentprice)\r\n\r\n            buy = float((bidprice*qty)+((bidprice*qty)*0.0025)+((bidprice*qty)\r\n                                                                * 0.0025)*0.12+((bidprice*qty)*0.00005)+((bidprice*qty)*0.0001))\r\n            1. \u8ce3\u51fa\u6de8\u984d(\u7a05\u5f8c)\r\n            sell = float((currentprice*qty)-((currentprice*qty)*0.0025)-((currentprice*qty)*0.0025) *\r\n                         0.12-((currentprice*qty)*0.006)-((currentprice*qty)*0.00005)-((currentprice*qty)*0.0001))\r\n            1. \u5229\u6f64\r\n            net_protfit = format((sell-buy), '.2f')\r\n            1. \u5229\u6f64 % \u6578\r\n            net_protfit_percent = format(((sell-buy)/buy), '.3%')\r\n\r\n            1. \u6b04\u4f4d:  \u7de8\u865f symbol \u8cb7\u9032\u50f9\u683c \u55ae\u4f4d \u73fe\u50f9 \u5229\u6f64 \u5229\u6f64%\u6578\r\n            1. \u53ea\u6703\u7528\u5230 symbol \u73fe\u50f9 \u5176\u4ed65\u6b04\u4f4d\u7684\u8cc7\u6599\u4f86\u81ea \u8f38\u5165\u6846 & \u8a08\u7b97\r\n            if len(tree.get_children()) >= 10:\r\n                messagebox.showwarning(\"\u63d0\u793a\u8a0a\u606f\", \"\u8cc7\u6599\u53ea\u80fd10\u7b46\u4ee5\u4e0b\")\r\n            else:\r\n                i = [int(n), str(symbol), str(bidprice), str(qty), str(\r\n                    currentprice), str(net_protfit), str(net_protfit_percent)]\r\n                tree.insert('', 'end', values=i)\r\n                n += 1\r\n        except:\r\n            messagebox.showwarning(\"\u932f\u8aa4\u8a0a\u606f\", \"\u8acb\u8f38\u5165\u6b63\u78ba\u683c\u5f0f!!!\")\r\n\r\ndef treeSel(event):\r\n    item = tree.selection()\r\n    itemvalues = tree.item(item, 'values')\r\n\r\n    '''\r\n    \u6e2c\u8a66\u7528 \u770b\u6709\u5e7e\u7b46\u8cc7\u6599\r\n    print(len(tree.get_children()))\r\n    \u6e2c\u8a66\u7528 \u770bitem\u503c\r\n     print(len(itemvalues),itemvalues)\r\n    n=0\r\n    for i in itemvalues:\r\n        print('item{}={}'.format(n,i))\r\n        n+=1\r\n    '''\r\n    1. \u6e05\u9664\u8f38\u5165\u6846\r\n    clearEntry()\r\n    1. \u66f4\u65b0\u8f38\u5165\u6846\u7684\u503c\r\n    txt_input_symbol.insert(0, itemvalues[1])\r\n    txt_input_bidprice.insert(0, itemvalues[2])\r\n    txt_input_qty.insert(0, itemvalues[3])\r\n    txt_input_currentprice.insert(0, itemvalues[4])\r\n\r\ndef modify_column():\r\n    pass\r\n\r\ndef del_column():\r\n    try:\r\n        selected_item = tree.selection()[0]  # get selected item\r\n        tree.delete(selected_item)\r\n    except:\r\n        messagebox.showwarning(\"\u932f\u8aa4\u8a0a\u606f\", \"\u8acb\u9ede\u9078\u8981\u522a\u9664\u7684\u8cc7\u6599!!!\")\r\n\r\ndef clearEntry():\r\n    txt_input_symbol.delete(0, 'end')\r\n    txt_input_bidprice.delete(0, 'end')\r\n    txt_input_qty.delete(0, 'end')\r\n    txt_input_currentprice.delete(0, 'end')\r\n\r\n    '''\r\n    #end\u6539\u6210\u5f15\u865f+\u5c0f\u5beb\r\n    #https://bit.ly/36g3GXN\r\n    #python - How to clear the Entry widget after a button is pressed in Tkinter? - Stack Overflow\r\n    #\u539f\u672c\u7684\u5beb\u6cd5 \u4e0d\u6703\u904e\r\n    sidEntry.delete(0, END)\r\n\r\n    '''\r\n\r\ndef clean_treeview():\r\n    tree.delete(*tree.get_children())\r\n\r\n1. ===================================================================================\r\n1. \u529f\u80fd\u8868\r\nfilemenu = tk.Menu(root)\r\nroot.config(menu=filemenu)\r\n\r\nmenu1 = tk.Menu(filemenu)\r\nmenu2 = tk.Menu(filemenu)\r\n\r\nmenu1.add_command(label='\u8b80\u53d6\u80a1\u50f9\u640d\u76ca\u540d\u55ae(O)', command=loadfile)\r\nmenu1.add_command(label='\u5132\u5b58\u80a1\u50f9\u640d\u76ca\u540d\u55ae(S)', command=savefile)\r\n\r\nfilemenu.add_cascade(label='\u6a94\u6848(F)', menu=menu1)\r\nfilemenu.add_cascade(label='\u8aaa\u660e(H)')\r\n1. ===================================================================================\r\nlbl_label1 = tk.Label(root)\r\nlbl_label1.grid(row=0, column=0, columnspan=8)\r\n1. ===================================================================================\r\n1. \u6b04\u4f4d:  \u7de8\u865f symbol \u8cb7\u9032\u50f9\u683c \u55ae\u4f4d \u73fe\u50f9 \u5229\u6f64 \u5229\u6f64%\u6578\r\ncolumns = ('0', '1', '2', '3', '4', '5', '6')\r\ntree = ttk.Treeview(root, show='headings', columns=columns)\r\ntree.column('0', width=22, anchor='e')\r\ntree.column('1', width=60, anchor='center')\r\ntree.column('2', width=60, anchor='center')\r\ntree.column('3', width=60, anchor='center')\r\ntree.column('4', width=80, anchor='center')\r\ntree.column('5', width=80, anchor='center')\r\ntree.column('6', width=60, anchor='center')\r\n\r\n1. \u6b04\u4f4d\u984f\u8272\u8a2d\u5b9a source: https://bit.ly/2TurTTc\r\ntree.tag_configure('+', background='red')\r\ntree.tag_configure('-', background='green')\r\n\r\ntree.heading('0', text='#')\r\ntree.heading('1', text='Symbol')\r\ntree.heading('2', text='Bid Price')\r\ntree.heading('3', text='QTY')\r\ntree.heading('4', text='Current Price')\r\ntree.heading('5', text='Net Protfit')\r\ntree.heading('6', text='%')\r\ntree.grid(row=1, column=0, columnspan=8)\r\n1. ===================================================================================\r\n\r\nlbl_symbol = tk.Label(root, text=\"Symbol:\", fg=\"green\")\r\nlbl_symbol.grid(row=2, column=0)\r\ntxt_input_symbol = tk.Entry(root, width=10)\r\ntxt_input_symbol.grid(row=2, column=1)\r\n\r\nlbl_bidprice = tk.Label(root, text=\"\u8cb7\u9032\u50f9\u683c:\", fg=\"green\")\r\nlbl_bidprice.grid(row=2, column=2)\r\ntxt_input_bidprice = tk.Entry(root, width=10)\r\ntxt_input_bidprice.grid(row=2, column=3)\r\n\r\nlbl_qty = tk.Label(root, text=\"\u55ae\u4f4d:\", fg=\"green\")\r\nlbl_qty.grid(row=2, column=4)\r\ntxt_input_qty = tk.Entry(root, width=10)\r\ntxt_input_qty.grid(row=2, column=5)\r\n\r\nlbl_currentprice = tk.Label(root, text=\"\u8ce3\u51fa\u50f9\u683c:\", fg=\"red\")\r\nlbl_currentprice.grid(row=2, column=6)\r\ntxt_input_currentprice = tk.Entry(root, width=10)\r\ntxt_input_currentprice.grid(row=2, column=7)\r\n\r\n1. ===================================================================================\r\n\r\nbtn_confirm = tk.Button(root, text='\u65b0\u589e\u6578\u64da', command=summy)\r\nbtn_confirm.grid(row=3, column=0, columnspan=1)\r\n\r\nbtn_confirm = tk.Button(root, text='\u4fee\u6539\u6578\u64da', command=modify_column)\r\nbtn_confirm.grid(row=3, column=1, columnspan=2)\r\n\r\nbtn_confirm = tk.Button(root, text='\u522a\u9664\u6578\u64da', command=del_column)\r\nbtn_confirm.grid(row=3, column=2, columnspan=3)\r\n\r\nbtn_save = tk.Button(root, text='\u5132\u5b58\u6578\u64da', command=savefile)\r\nbtn_save.grid(row=3, column=3, columnspan=4)\r\n\r\nbtn_save = tk.Button(root, text='\u8f09\u5165\u6578\u64da', command=loadfile)\r\nbtn_save.grid(row=3, column=4, columnspan=5)\r\n\r\n1. ===================================================================================\r\n1. \u6e2c\u8a66\u7528\u8cc7\u6599\r\n\r\ntree.insert('', 'end', values=['1', 'BDO', '101.0',\r\n                               '1000', '105.0', '2762.30', '2.727%'])\r\ntree.insert('', 'end', values=['2', 'BPI', '0', '0', '0', '0', '0'])\r\ntree.insert('', 'end', values=['3', 'SMC', '0', '0', '0', '0', '0'])\r\ntree.insert('', 'end', values=['4', 'SM', '0', '0', '0', '0', '0'])\r\ntree.insert('', 'end', values=['5', 'ALI', '0', '0', '0', '0', '0'])\r\n\r\n1. ===================================================================================\r\n\r\ntree.bind('<<TreeviewSelect>>', treeSel)\r\n1. ===================================================================================\r\n\r\nroot.mainloop()\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u5fc3\u5f97&\u88dc\u5145:\r\n\u9019\u7bc7\u4e3b\u8981\u662f\u4f7f\u7528 treeview \u9019\u500b\u5143\u4ef6 \u8001\u5be6\u8aaa\u9019\u500b\u5143\u4ef6\u597d\u7528\u6b78\u597d\u7528\uff0c\u4f46\u6709\u95dc\u65bcdom\u7684\u64cd\u4f5c\u771f\u7684\u4e0d\u662f\u5f88\u76f4\u89ba \u7a0b\u5f0f\u5beb\u5b8c\uff0c\u6211\u9084\u4e0d\u77e5\u9053\u600e\u9ebc\u76f4\u63a5\u62ff\u5230index \u8981\u600e\u9ebc\u5c0drow \u8ddf column \u505a\u6392\u5e8f\u3001\u8655\u7406\u6216\u52a0\u7e3d \u9084\u662fpandas \u597d\u7528\u8a31\u591a \u2026\u53ef\u60dctkinter \u76ee\u524d\u597d\u50cf\u6c92\u6709\u9019\u529f\u80fd"}),"\n",(0,i.jsx)(e.p,{children:"\u53e6\u5916\u7a0b\u5f0f\u5b8c\u6210\u5f8c\uff0c\u8996\u7a97\u7684\u5927\u5c0f\u6bd4\u4f8b\u602a\u602a\u7684 \u9019\u908a\u540c\u5834\u52a0\u6620\uff0c\u5728\u62d6\u66f3\u662f\u7a97\u4f4d\u7f6e\u6216\u8abf\u6574\u5927\u5c0f\u6642\uff0c\u53ef\u4ee5\u770b\u5230\u8996\u7a97\u76ee\u524d\u7684\u5ea7\u6a19\u8ddf\u5927\u5c0f"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"demo",src:n(7568).A+"",width:"566",height:"415"})}),"\n",(0,i.jsx)(e.p,{children:"\u7a0b\u5f0f\u78bc:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import tkinter as tk\r\n\r\ndef go():\r\n\r\n    txt = '\u8996\u7a97\u5de6\u4e0a\u89d2\u5ea7\u6a19\u70ba:({},{})\\n \u8996\u7a97\u9ad8\u5ea6\u70ba:{} \u8996\u7a97\u5bec\u5ea6\u70ba:{}'.format(\r\n        root.winfo_x(), root.winfo_y(),  root.winfo_height(), root.winfo_width())\r\n    label1.configure(text=txt)\r\n    root.after(1, go)\r\n\r\nroot = tk.Tk()\r\nroot.geometry(\"400x200+100+50\")\r\nlabel1 = tk.Label(root)\r\nlabel1.pack()\r\ngo()\r\nroot.mainloop()\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u628a\u7a0b\u5f0f\u5957\u7528\u5728\u672c\u6b21\u7684\u5be6\u4f8b\u4e2d:"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"demo",src:n(847).A+"",width:"760",height:"546"})}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u6a23\u5c0d\u7a0b\u5f0f\u7684\u5916\u89c0\u90a3\u908a\u8981\u8abf\u6574\u5c31\u4e00\u76ee\u4e86\u7136 :)\r\n\u53e6\u5916\u9019\u96bb\u7a0b\u5f0f\u662f\u6211\u7684\u80a1\u50f9\u5c0f\u5e6b\u624b\u7684\u4e00\u500b\u9644\u5c6c\u5de5\u5177\u7a0b\u5f0f"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"demo",src:n(4331).A+"",width:"451",height:"565"})})]})}function u(r={}){const{wrapper:e}={...(0,o.R)(),...r.components};return e?(0,i.jsx)(e,{...r,children:(0,i.jsx)(d,{...r})}):d(r)}},7568:(r,e,n)=>{n.d(e,{A:()=>t});const t=n.p+"assets/images/tk_form_size-997963bf9acf0fd708fe5494a6630dbd.png"},8453:(r,e,n)=>{n.d(e,{R:()=>l,x:()=>c});var t=n(6540);const i={},o=t.createContext(i);function l(r){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function c(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(i):r.components||i:l(r.components),t.createElement(o.Provider,{value:e},r.children)}},9771:r=>{r.exports=JSON.parse('{"permalink":"/myblog/blog/Python-Tkinter-GUI-example-stock-profit-calculator","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024/0928/index.md","source":"@site/blog/2024/0928/index.md","title":"Python Tkinter GUI\u7a0b\u5f0f\u5be6\u4f8b \u80a1\u50f9\u640d\u76ca\u8a08\u7b97\u6a5f","description":"- \u767c\u5e03\u65e5\u671f: 2020\u5e7412\u67081\u65e5","date":"2024-09-28T10:00:00.000Z","tags":[{"inline":false,"label":"Facebook","permalink":"/myblog/blog/tags/facebook","description":"Facebook tag description"},{"inline":false,"label":"Hello","permalink":"/myblog/blog/tags/hello","description":"Hello tag description"},{"inline":false,"label":"Docusaurus","permalink":"/myblog/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":5.68,"hasTruncateMarker":true,"authors":[{"name":"Smile Hsu","title":"Full-stack developer ,Data Analyst","url":"https://smilehsu.cc","page":{"permalink":"/myblog/blog/authors/smilehsu"},"socials":{"github":"https://github.com/rs6000","newsletter":"https://smilehsu.cc"},"imageURL":"/myblog/img/authors/me.jpg","key":"smilehsu"}],"frontMatter":{"slug":"Python-Tkinter-GUI-example-stock-profit-calculator","title":"Python Tkinter GUI\u7a0b\u5f0f\u5be6\u4f8b \u80a1\u50f9\u640d\u76ca\u8a08\u7b97\u6a5f","authors":["smilehsu"],"tags":["facebook","hello","docusaurus"],"date":"2024-09-28T10:00"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528JS\u5efa\u7acbRESTful API","permalink":"/myblog/blog/RESTful-API-with-JS"},"nextItem":{"title":"\u770bYT\u5b78React Native \u2013 \u4f7f\u7528\u76f8\u6a5f\u6a21\u7d44(Camera)","permalink":"/myblog/blog/React-Native-Camera-Module"}}')}}]);